plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.asciidoctor.convert" version "1.5.3"  // (1)
}

group = 'com.chang.soloproject'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
    snippetsDir = file('build/generated-snippets')          // (2) 스니펫(snippet) : 문서 조각으로 생각하면 됩니다
}


bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')

    implementation('org.springdoc:springdoc-openapi-ui:1.5.2')
    implementation('com.querydsl:querydsl-jpa')

    runtimeOnly('org.postgresql:postgresql')

    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')

    testCompileOnly('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE' // (4)
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.2.RELEASE' // (5)

}

test {
    outputs.dir snippetsDir // (6)
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir  // (7)
    dependsOn test          // (8) gradle build 시 test → asciidoctor 순으로 수행됩니다.
}

bootJar {
    dependsOn asciidoctor                      // (9) gradle build 시 asciidoctor → bootJar 순으로 수행됩니다.
    from ("${asciidoctor.outputDir}/html5") {  // (10)  gradle build 시 ./build/asciidoc/html5/ 에 html 파일이 생깁니다.
        into 'static/docs'
    }
}